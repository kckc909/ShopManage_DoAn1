<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTao.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAABKxJREFUaEPtms1vVFUYxksU1EjE+oEuYWkk6D+hgoAUdyDsILoBmuoWdI2uSJr4
        N3SJUQKJNAhOWjpMpx9p6RTSBcKCoDuxppDh99w8J1OYGXpn7rkzQ8OTvLnnvu8578f5PufevhdYr5id
        nX1renp6YGpq6kfoV9I3oH9I/y9yel4ySHn2w+t38e5iaWnp1ZmZmSM4dRF6hGPVFukh5S7wPFypVF6x
        2s6hUCi8hvFvceJucIr0MnSJ9ClogAA/4NlfLBY3ipQ2bwA6Td5RlSEdgroDDalybCZfYGwPdMvGFcAE
        dBRntzhLakxOTr5J2WPoKa7SdxPa7SzxoZrCwM/BIHSdGv7U4swol8u70D+5Sv9w9NZhIL8vx23gX+j4
        yMjISxZHg3QSzEn0P5At0hM837M4G6ip7Si8acXzvO+wKDdgaye0YJuL8sGi9lAqld5dpfAa4+Adi3IH
        NvuxeVW2oVvqFRa1BvVPFCTdCYUFauV1izoG2cT+mH2YaGvMUDAZ2DzntdiZ3XHMzc29jR9Jr4CGzU4H
        CmiKTQZ2J8bEWsAPjZlkAsCfXWY/G17swjpx3Oyug54xKJ94LqbqYqwN3zmI63lMse1idHT0ZYIoO5hB
        sxtD+x0yaqugQD4xu2eAT587kLvPbBUyHXbGCbN6CtVqdQP+hZn0kNn1QHjRmY6alRnoG0Nfwa+Zgb6v
        5SN03qwn4fOEttXL7WwAm8FGq37NDHRpodT5ZqWhnwgO2OjvZkWBdUYLREDfZelkKt5nVg1E+ZONnjIr
        CqwzaiD4+oP1njGrBoQ6nmp8fGFWFOQRCPpC7zlnVg0wKxLqFGdWFNhg1EA4kH1ovTfMqoGW+FvC2Puq
        PALRLtx675lVA4FoJlAgm8xKDcpdseJ26IrVpIYXbg2DZbNq6GIgf1hNaqwVyHPTtXzgk976rgVz3Qz2
        MP3uNysK8giEyv7SeuunXwIIC+Jps6LAOqMGgq/NF0SYugFUi1wyKwpsMGog6Eu2KLTMXrNqQNAPJZtG
        3QCanRkyKPJrZmgywsdk08js9YbZT4IMulBWqxwzKzPQp6m55Sm2GdD1jXyEfjOrHgi/cqaiWT0FH6xK
        8pHKPmh2PbzQ/KWMbJE/M7tnoDEh36Db8tXsxiDTkDOXevDyYcq+nTC7OXSoJ3+46z1pdteBP6GCF9Zs
        jQAC2O1CuhTbaXbXwEz1MT79J5/oXq19yqDQsINZ0LWl2R2H9lUEsShfeJ41Oz3cxfR9QsGM6ULZoo6B
        ltiM7XH7MJ66Sz0N7zL1dVa1cU3vFuUOL3x/2rbGbLYPPrSEPvQkTQst0Ec/sig3eEwEmxV2GtssygbV
        BopDN3tAelDTocXRIJ3oH0J/MrChcSpyq8VxoDGD4jABqLnLUJSvr16x96AvrBPJwG57TKQBNaSvr6HZ
        RbqL1TVmy38xaBxQTnunZNthqrQ8xbYLz2j6XpFsZ0S8a0eq7fX30AGd4jRt4+wmkdJUwg6c1KFIeS67
        TAjgNnQi11ZoBhnFmUM4cB56aIdaoRXK69+Ug10JoBF0oUyN78O5Mzj2C6QfaO5DyU81Ts8hP6c8yovz
        jc8TL/Dco6/vMY+uK9X0K+JvAAAAAElFTkSuQmCC
</value>
  </data>
</root>